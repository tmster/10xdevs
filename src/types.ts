// Import database types from the DB types file
import type { Tables, Json } from "./db/database.types";

// Extract underlying database row types for easier reference
type FlashcardDB = Tables<"flashcards">;
type GenerationDB = Tables<"generations">;
type GenerationErrorLogDB = Tables<"generation_error_logs">;

/*
  DTOs and Command Models for Flashcards
*/

// FlashcardDTO represents the flashcard data returned by the API endpoints,
// omitting internal fields such as the user_id and generation_id.
export type FlashcardDTO = Omit<FlashcardDB, "generation_id" | "user_id">;

// Command model for creating a flashcard manually (POST /api/flashcards)
export type CreateFlashcardCommand = Pick<FlashcardDTO, "front" | "back">;

// Command model for updating an existing flashcard (PATCH /api/flashcards/:id)
export type UpdateFlashcardCommand = Pick<FlashcardDTO, "front" | "back" | "status">;

// Command model for generating flashcards via AI (POST /api/flashcards/generate)
export interface GenerateFlashcardsCommand {
  text: string;
  options: {
    max_cards: number;
  };
}

// DTO for an individual flashcard generated by AI.
// It is based on FlashcardDTO but enforces specific status and source values.
export type GeneratedFlashcardDTO = Omit<FlashcardDTO, "status" | "source"> & {
  status: "pending" | "accepted";
  source: "ai-full";
};

// Response DTO for the AI flashcard generation endpoint.
export interface GenerateFlashcardsResponse {
  generation_id: string;
  flashcards: GeneratedFlashcardDTO[];
}

// Union type for batch flashcard actions within the batch processing command.
export type BatchFlashcardAction =
  | {
      id: string;
      action: "accept" | "reject";
    }
  | {
      id: string;
      action: "edit";
      front: string;
      back: string;
    };

// Command model for batch processing of flashcards (POST /api/flashcards/batch)
export interface BatchProcessFlashcardsCommand {
  generation_id: string;
  flashcards: BatchFlashcardAction[];
}

// DTO for individual flashcard items in the batch processing response.
// It returns only a subset of the flashcard data.
export type ProcessedFlashcardItemDTO = Pick<FlashcardDTO, "id"> & {
  status: "accepted" | "rejected";
  source: "ai-full" | "ai-edited";
};

// Response DTO for the batch flashcard processing endpoint.
export interface BatchProcessFlashcardsResponse {
  success: boolean;
  processed: number;
  failed: number;
  flashcards: ProcessedFlashcardItemDTO[];
}

/*
  DTOs and Command Models for Generations
*/

// DTO for generation history items (GET /api/generations).
// It includes selected fields from the generation record and computed metrics.
export type GenerationHistoryDTO = Pick<GenerationDB, "id" | "created_at" | "log"> & {
  total_cards: number;
  accepted_cards: number;
};

// DTO for generation error logs, returning key error details.
export type GenerationErrorLogDTO = Pick<
  GenerationErrorLogDB,
  "status" | "error_code" | "error_message" | "created_at"
>;

// Detailed DTO for a generation (GET /api/generations/:id)
// Combines basic generation data, associated flashcards, error logs, and statistics.
export interface GenerationDetailDTO {
  id: string;
  created_at: string;
  log: Json;
  flashcards: FlashcardDTO[];
  error_logs: GenerationErrorLogDTO[];
  stats: {
    total_cards: number;
    accepted_cards: number;
    rejected_cards: number;
  };
}

/*
  DTOs and Command Models for Generations - Create Generation
  Walidacja: `text` musi mieć od 1000 do 10000 znaków.
*/
export interface CreateGenerationCommand {
  text: string;
  options: {
    max_cards: number;
  };
}

export interface CreateGenerationResponse {
  generation_id: string;
  flashcards: GeneratedFlashcardDTO[];
}

/*
  DTO for Statistics Endpoint (GET /api/statistics)
*/
export interface StatisticsDTO {
  flashcards: {
    total: number;
    by_source: {
      "ai-full": number;
      "ai-edited": number;
      manual: number;
    };
    by_status: {
      accepted: number;
      rejected: number;
    };
  };
  generations: {
    total: number;
    cards_generated: number;
    cards_accepted: number;
    acceptance_rate: number;
  };
}

/*
  DTO for User Account Deletion Response (DELETE /api/users/me)
*/
export interface DeleteUserAccountResponseDTO {
  success: boolean;
}
